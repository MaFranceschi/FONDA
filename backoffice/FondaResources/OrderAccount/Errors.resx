<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ClassNameClosedOrdersPresenter" xml:space="preserve">
    <value>ClosedOrdersPresenter</value>
    <comment>Clase presentadora de las Ordenes cerradas</comment>
  </data>
  <data name="ClassNameCloseOrder" xml:space="preserve">
    <value>CommandCloseOrder</value>
    <comment>Comando para cerrar una orden abierta</comment>
  </data>
  <data name="ClassNameDetailOrderPresenter" xml:space="preserve">
    <value>DetailOrderPresenter</value>
    <comment>Clase presentadora del detalle de la Orden</comment>
  </data>
  <data name="ClassNameGenerateInvoice" xml:space="preserve">
    <value>CommandGenerateInvoice</value>
    <comment>Comando para generar una factura</comment>
  </data>
  <data name="ClassNameGetCloseOrders" xml:space="preserve">
    <value>CommandGetCloseOrders</value>
    <comment>Comando para obtener las ordenes cerradas de un Restaurante</comment>
  </data>
  <data name="ClassNameGetInvoice" xml:space="preserve">
    <value>CommandGetInvoice</value>
    <comment>Comando para obtener una factura</comment>
  </data>
  <data name="ClassNameGetOrder" xml:space="preserve">
    <value>CommandGetOrder</value>
    <comment>Comando para obtener una orden</comment>
  </data>
  <data name="ClassNameGetOrders" xml:space="preserve">
    <value>CommandGetOrders</value>
    <comment>Comando para obtener las ordenes de un Restaurante</comment>
  </data>
  <data name="ClassNameOrderInvoicesPresenter" xml:space="preserve">
    <value>OrderInvoicesPresenter</value>
    <comment>Clase presentadora de las facturas</comment>
  </data>
  <data name="ClassNameOrdersPresenter" xml:space="preserve">
    <value>OrdersPresenter</value>
    <comment>Clase presentadora de las Ordenes abiertas</comment>
  </data>
  <data name="ClassNamePayOrder" xml:space="preserve">
    <value>CommandPayOrder</value>
    <comment>Comando para pagar una orden abierta</comment>
  </data>
  <data name="ErrorMessageCloseCashRegister" xml:space="preserve">
    <value>Error al realizar el cierre de caja</value>
    <comment>Mensaje de error para CommandCloseCashRegister</comment>
  </data>
  <data name="ErrorMessageGenerateInvoice" xml:space="preserve">
    <value>Error al crear la factura para una orden cerrada</value>
    <comment>Mensaje de error para CommandGenerateInvoice</comment>
  </data>
  <data name="ErrorMessageGetCloseOrders" xml:space="preserve">
    <value>Error obteniendo las ordenes cerradas de un Restaurante</value>
    <comment>Mensaje de error para CommandGetCloseOrders</comment>
  </data>
  <data name="ErrorMessageGetInvoice" xml:space="preserve">
    <value>Error al obtener la factura de una orden cerrada</value>
    <comment>Mensaje de error para CommandGetInvoice</comment>
  </data>
  <data name="ErrorMessageGetOrder" xml:space="preserve">
    <value>Error al obtener una orden</value>
    <comment>Mensaje de error para CommandGetOrder</comment>
  </data>
  <data name="ErrorMessageGetOrders" xml:space="preserve">
    <value>Error obteniendo las ordenes de un Restaurante</value>
    <comment>Mensaje de error para CommandGetOrders</comment>
  </data>
  <data name="ErrorMessagePayOrder" xml:space="preserve">
    <value>Error al pagar una orden abierta en un Restaurante</value>
    <comment>Mensaje de error para CommandPayOrder</comment>
  </data>
  <data name="MessageMVPExceptionCloseButton" xml:space="preserve">
    <value>No se puede realizar el cierre de caja cuando existen ordenes abiertas</value>
    <comment>Mensaje de error para MVPExceptionCloseButton</comment>
  </data>
  <data name="MessageMVPExceptionClosedOrdersTable" xml:space="preserve">
    <value>Se ha producido un error al llenar la tabla de Ordenes cerradas</value>
    <comment>Mensaje de error para MVPExceptionClosedOrdersTable</comment>
  </data>
  <data name="MessageMVPExceptionDetailOrderTable" xml:space="preserve">
    <value>Se ha producido un error al llenar la tabla del detale de la Orden #</value>
    <comment>Mensaje de error para MVPExceptionDetailOrderTable</comment>
  </data>
  <data name="MessageMVPExceptionOrderInvoicesTable" xml:space="preserve">
    <value>Se ha producido un error al llenar la tabla de Facturas</value>
    <comment>Mensaje de error para MVPExceptionOrderInvoicesTable</comment>
  </data>
  <data name="MessageMVPExceptionOrdersTable" xml:space="preserve">
    <value>Se ha producido un error al llenar la tabla de Ordenes abiertas</value>
    <comment>Mensaje de error para MVPExceptionOrdersTable</comment>
  </data>
  <data name="MVPExceptionCloseButtonCode" xml:space="preserve">
    <value>BO-04-005</value>
    <comment>Mensaje de error al cerrar la cuenta </comment>
  </data>
  <data name="MVPExceptionClosedOrdersTableCode" xml:space="preserve">
    <value>BO-04-001</value>
    <comment>Mensaje de error al llenar tabla de Ordenes cerradas</comment>
  </data>
  <data name="MVPExceptionDetailOrderTableCode" xml:space="preserve">
    <value>BO-04-004</value>
    <comment>Mensaje de error al llenar tabla de detalle de Orden</comment>
  </data>
  <data name="MVPExceptionOrderInvoicesTableCode" xml:space="preserve">
    <value>BO-04-003</value>
    <comment>Mensaje de error al llenar tabla de facturas</comment>
  </data>
  <data name="MVPExceptionOrdersTableCode" xml:space="preserve">
    <value>BO-04-002</value>
    <comment>Mensaje de error al llenar tabla de Ordenes abiertas</comment>
  </data>
</root>